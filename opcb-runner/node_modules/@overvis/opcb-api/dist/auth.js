"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.auth = void 0;
const server_tools_1 = require("@overvis/server-tools");
function auth(level, handler) {
    return function (req, reply) {
        const auth = req.headers.authorization;
        if (auth === undefined) {
            throw new server_tools_1.ApiUserError(401, "NoAuthTokenProvided", "Header does not contain authorization token");
        }
        const token = auth.split(" ")[1];
        const session = this.sessions[token];
        if (!session || session.expiresOn < Date.now()) {
            throw new server_tools_1.ApiUserError(401, "IncorrectAuthToken", "Authentication token is incorrect or expired.");
        }
        session.expiresOn = Date.now() + session.ttl * 1000;
        if (level === "readConfs" && session.access.configuration === "none") {
            throw new server_tools_1.ApiUserError(403, "Forbidden", "You do not have an access to reading configuration.");
        }
        if (level === "writeConfs" && session.access.configuration !== "readWrite") {
            throw new server_tools_1.ApiUserError(403, "Forbidden", "You do not have an access to changing configuration.");
        }
        if (level === "modbus" && session.access.modbusDevices === "none") {
            throw new server_tools_1.ApiUserError(403, "Forbidden", "You do not have an access to connected devices.");
        }
        return handler.call(this, { ...req, session, sessionKey: token }, reply);
    };
}
exports.auth = auth;
//# sourceMappingURL=auth.js.map