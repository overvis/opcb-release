"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.SCHEMA = void 0;
const server_tools_1 = require("@overvis/server-tools");
const typebox_1 = require("@sinclair/typebox");
const opcb_ts_shared_1 = require("@overvis/opcb-ts-shared");
const auth_1 = require("../auth");
const BODY_SCHEMA = typebox_1.Type.Record(typebox_1.Type.String(), typebox_1.Type.Unsafe({ type: ["string", "null"] }));
const OK_RESPONSE_SCHEMA = typebox_1.Type.Object({}, { additionalProperties: false });
exports.SCHEMA = {
    body: BODY_SCHEMA,
    response: (0, server_tools_1.apiResponse)(OK_RESPONSE_SCHEMA),
};
async function openHandler(req) {
    const res = await this.bus.sendRequest(new opcb_ts_shared_1.redisBus.SetConfig(req.body));
    if (res.status !== "ok") {
        throw new server_tools_1.ApiUserError(400, "IncorrectValue", `Config validation errror. Key: ${res.status.key}, code: ${res.status.code}`);
    }
    await this.bus.waitForMsg("dev-state");
    return {};
}
exports.handler = (0, auth_1.auth)("writeConfs", openHandler);
//# sourceMappingURL=conf-set.js.map