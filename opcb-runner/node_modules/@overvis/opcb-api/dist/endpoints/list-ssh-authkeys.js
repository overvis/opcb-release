"use strict";
// TOKEN=`curl -s -H "Content-Type: application/json" \
// -d '{"username": "admin", "password": "admin" }' \
// "http://localhost/api/login/" | \
// jq -r ".token"` \
// && \
// curl -s -S -H "Content-Type: application/json" \
// -H "Authorization: bearer $TOKEN" \
// "http://localhost/api/list/ssh-authkeys/" | \
// jq -C
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.SCHEMA = void 0;
const opcb_ts_shared_1 = require("@overvis/opcb-ts-shared");
const server_tools_1 = require("@overvis/server-tools");
const typebox_1 = require("@sinclair/typebox");
const auth_1 = require("../auth");
const OK_RESPONSE_SCHEMA = typebox_1.Type.Array(typebox_1.Type.String());
exports.SCHEMA = {
    response: (0, server_tools_1.apiResponse)(OK_RESPONSE_SCHEMA),
};
async function openHandler(_req) {
    await this.bus.sendRequest(new opcb_ts_shared_1.redisCmd.UpdateList("sshkeys"));
    const list = await this.bus.getList("sshkeys");
    return list;
}
exports.handler = (0, auth_1.auth)("readConfs", openHandler);
//# sourceMappingURL=list-ssh-authkeys.js.map