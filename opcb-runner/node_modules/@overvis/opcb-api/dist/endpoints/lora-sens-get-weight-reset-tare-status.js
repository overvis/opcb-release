"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.SCHEMA = void 0;
const server_tools_1 = require("@overvis/server-tools");
const typebox_1 = require("@sinclair/typebox");
const reset_tare_1 = require("../model/lora-sens/reset-tare");
const QUERYSTRING_SCHEMA = typebox_1.Type.Object({
    did: typebox_1.Type.Number(),
});
const OK_RESPONSE_SCHEMA = typebox_1.Type.Union([
    typebox_1.Type.Object({
        status: typebox_1.Type.Union([
            typebox_1.Type.Literal(reset_tare_1.RESET_TARE_STATUS.Idle),
            typebox_1.Type.Literal(reset_tare_1.RESET_TARE_STATUS.Complete),
            typebox_1.Type.Literal(reset_tare_1.RESET_TARE_STATUS.Start),
        ]),
        lastUpdatedSec: typebox_1.Type.Optional(typebox_1.Type.Number()),
        lastCmdError: typebox_1.Type.Optional(typebox_1.Type.Number()),
    }),
    typebox_1.Type.Object({
        status: typebox_1.Type.Literal(reset_tare_1.RESET_TARE_STATUS.Error),
        lastUpdatedSec: typebox_1.Type.Optional(typebox_1.Type.Number()),
    }),
]);
exports.SCHEMA = {
    querystring: QUERYSTRING_SCHEMA,
    response: (0, server_tools_1.apiResponse)(OK_RESPONSE_SCHEMA),
};
function handler(req) {
    const resp = (0, reset_tare_1.getLoraSensWeightResetTareStatus)(this.queries, req.query.did);
    return resp;
}
exports.handler = handler;
//# sourceMappingURL=lora-sens-get-weight-reset-tare-status.js.map