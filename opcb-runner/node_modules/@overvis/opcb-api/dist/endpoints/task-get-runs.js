"use strict";
/*
TOKEN=`curl -s -H "Content-Type: application/json" \
        -d '{"username": "admin", "password": "admin" }' \
        "http://localhost:4004/api/login/" | \
    jq -r ".token"` \
&& \
curl -s -S -H "Content-Type: application/json" -H "Authorization: bearer $TOKEN" \
    "http://localhost:4004/api/tasks/78b3b511-a3ab-497d-aaef-73234fabe648/runs/" | \
    jq -C
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.SCHEMA = exports.PARAMS_SCHEMA = void 0;
const server_tools_1 = require("@overvis/server-tools");
const typebox_1 = require("@sinclair/typebox");
const auth_1 = require("../auth");
exports.PARAMS_SCHEMA = typebox_1.Type.Object({
    id: typebox_1.Type.String({ format: "uuid" }),
});
const OK_RESPONSE_SCHEMA = typebox_1.Type.Array(typebox_1.Type.Object({
    id: typebox_1.Type.String({ format: "uuid" }),
    startedOn: typebox_1.Type.String({ format: "date-time" }),
    finishedOn: typebox_1.Type.Optional(typebox_1.Type.String({ format: "date-time" })),
    error: typebox_1.Type.Optional(typebox_1.Type.String()),
    log: typebox_1.Type.Optional(typebox_1.Type.String()),
    userJson: typebox_1.Type.Optional(typebox_1.Type.String()),
}));
exports.SCHEMA = {
    params: exports.PARAMS_SCHEMA,
    response: (0, server_tools_1.apiResponse)(OK_RESPONSE_SCHEMA),
};
function openHandler(req) {
    const records = this.queries.task.getRuns(req.params.id);
    return records.map((v) => ({
        id: v.id,
        startedOn: (0, server_tools_1.dateToIsoString)(new Date(v.started_on * 1000)),
        finishedOn: v.finished_on ? (0, server_tools_1.dateToIsoString)(new Date(v.finished_on * 1000)) : undefined,
        error: v.error,
        log: v.log,
        userJson: v.user_json,
    }));
}
exports.handler = (0, auth_1.auth)("readConfs", openHandler);
//# sourceMappingURL=task-get-runs.js.map