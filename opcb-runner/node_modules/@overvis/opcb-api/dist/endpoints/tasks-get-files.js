"use strict";
/*
TOKEN=`curl -s -H "Content-Type: application/json" \
        -d '{"username": "admin", "password": "admin" }' \
        "http://localhost:4004/api/login/" | \
    jq -r ".token"` \
&& \
curl -s -S -H "Content-Type: application/json" -H "Authorization: bearer $TOKEN" \
    "http://localhost:4004/api/tasks/files/" | \
    jq -C
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.SCHEMA = void 0;
const server_tools_1 = require("@overvis/server-tools");
const typebox_1 = require("@sinclair/typebox");
const auth_1 = require("../auth");
const OK_RESPONSE_SCHEMA = typebox_1.Type.Array(typebox_1.Type.Object({
    filepath: typebox_1.Type.String(),
    lastUpdatedOn: typebox_1.Type.String({ format: "date-time" }),
    defaults: typebox_1.Type.Object({
        name: typebox_1.Type.Optional(typebox_1.Type.String()),
        description: typebox_1.Type.Optional(typebox_1.Type.String()),
        autorunPeriodSec: typebox_1.Type.Optional(typebox_1.Type.Integer()),
    }),
}));
exports.SCHEMA = {
    response: (0, server_tools_1.apiResponse)(OK_RESPONSE_SCHEMA),
};
function openHandler() {
    const records = this.queries.task.getFiles();
    return records.map((v) => ({
        filepath: v.filepath,
        lastUpdatedOn: (0, server_tools_1.dateToIsoString)(new Date(v.last_updated_on * 1000)),
        defaults: {
            name: v.task_name,
            description: v.task_description,
        },
    }));
}
exports.handler = (0, auth_1.auth)("readConfs", openHandler);
//# sourceMappingURL=tasks-get-files.js.map