"use strict";
/*
TOKEN=`curl -s -H "Content-Type: application/json" \
        -d '{"username": "admin", "password": "admin" }' \
        "http://localhost:3000/login/" | \
    jq -r ".token"` \
&& \
curl -s -S -H "Content-Type: application/json" -H "Authorization: bearer $TOKEN" \
    "http://localhost:3000/users/" | \
    jq -C
*/
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.changePasword = exports.CHANGE_PASSWORD_SCHEMA = exports.REMOVE_SCHEMA = exports.UPDATE_SCHEMA = exports.CREATE_SCHEMA = exports.LIST_SCHEMA = exports.remove = exports.update = exports.create = exports.list = void 0;
const tslib_1 = require("tslib");
/*
TOKEN=`curl -s -H "Content-Type: application/json" \
        -d '{"username": "admin", "password": "admin" }' \
        "http://localhost:3000/login/" | \
    jq -r ".token"` \
&& \
curl -s -S -H "Content-Type: application/json" -H "Authorization: bearer $TOKEN" \
    -d '{"username": "user1", "password": "user1" }' \
    "http://localhost:3000/users/create/" | \
    jq -C
*/
/*
TOKEN=`curl -s -H "Content-Type: application/json" \
        -d '{"username": "admin", "password": "admin" }' \
        "http://localhost:3000/login/" | \
    jq -r ".token"` \
&& \
curl -s -S -H "Content-Type: application/json" -H "Authorization: bearer $TOKEN" \
    -d '{ "allowModbus": false, "allowApi": false, "level": { "configuration": "read", "connectedDevices": "none" } }' \
    "http://localhost:3000/user/user1/update/" | \
    jq -C
*/
/*
TOKEN=`curl -s -H "Content-Type: application/json" \
        -d '{"username": "admin", "password": "admin" }' \
        "http://localhost:3000/login/" | \
    jq -r ".token"` \
&& \
curl -s -S -H "Content-Type: application/json" -H "Authorization: bearer $TOKEN" \
    -d '{"username": "user1", "password": "user1" }' \
    "http://localhost:3000/user/user1/delete/" | \
    jq -C
*/
const server_tools_1 = require("@overvis/server-tools");
const typebox_1 = require("@sinclair/typebox");
const conf_crud_endpoint_1 = require("../conf-crud-endpoint");
const users = tslib_1.__importStar(require("../model/users"));
_a = (0, conf_crud_endpoint_1.createConfCrudEndpoints)(users, typebox_1.Type.Object({
    username: typebox_1.Type.String(),
}), (p) => p.username, users.LIST_ITEM_SCHEMA, users.CREATE_ITEM_SCHEMA, users.UPDATE_ITEM_SCHEMA), exports.list = _a.list, exports.create = _a.create, exports.update = _a.update, exports.remove = _a.remove, exports.LIST_SCHEMA = _a.LIST_SCHEMA, exports.CREATE_SCHEMA = _a.CREATE_SCHEMA, exports.UPDATE_SCHEMA = _a.UPDATE_SCHEMA, exports.REMOVE_SCHEMA = _a.REMOVE_SCHEMA;
exports.CHANGE_PASSWORD_SCHEMA = {
    body: typebox_1.Type.Object({ password: typebox_1.Type.String({ minLength: 3, maxLength: 30 }) }),
    params: typebox_1.Type.Object({ username: typebox_1.Type.String() }),
    response: (0, server_tools_1.apiResponse)(conf_crud_endpoint_1.EMPTY_RESPONSE_SCHEMA),
};
exports.changePasword = (0, conf_crud_endpoint_1.makeUpdateHandler)(async (bus, key, item) => {
    return users.changePassword(bus, key, item.password);
}, (p) => p.username);
//# sourceMappingURL=users.js.map