"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.motherlandRequest = void 0;
const tslib_1 = require("tslib");
const server_tools_1 = require("@overvis/server-tools");
const axios_1 = tslib_1.__importDefault(require("axios"));
const __1 = require("..");
const value_1 = require("@sinclair/typebox/value");
async function motherlandRequest(url, config, schema) {
    let response;
    try {
        response = await (0, axios_1.default)(url, {
            ...config,
            headers: { "Content-Type": "application/json" },
            validateStatus: (status) => status >= 200 && status < 500,
        });
    }
    catch (e) {
        if (e && typeof e === "object" && "code" in e && e.code === "ECONNREFUSED") {
            throw new server_tools_1.ApiUserError(400, "MotherlandUnavailable", "Motherland server is unavailable or blacklisted the IP address.");
        }
        throw e;
    }
    const result = response.data;
    if (result && typeof result === "object" && "errorCode" in result) {
        __1.logger.warn(result, "Got error response from motherland.");
        const err = result;
        throw new server_tools_1.ApiUserError(400, err.errorCode, err.errorMessage);
    }
    if (response.status >= 300) {
        throw new Error(`Unexpected response status from motherland: ${response.status}`);
    }
    __1.logger.info(result, "Got data from Motherland.");
    if (!value_1.Value.Check(schema, result)) {
        throw new Error("Invalid response from Motherland.");
    }
    return result;
}
exports.motherlandRequest = motherlandRequest;
//# sourceMappingURL=motherland.js.map