"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.remove = exports.update = exports.create = exports.list = exports.UPDATE_ITEM_SCHEMA = exports.CREATE_ITEM_SCHEMA = exports.LIST_ITEM_SCHEMA = void 0;
const opcb_ts_shared_1 = require("@overvis/opcb-ts-shared");
const conf_crud_1 = require("./conf-crud");
exports.LIST_ITEM_SCHEMA = opcb_ts_shared_1.RS485_ITEM_SCHEMA;
function toListItem(rec) {
    return {
        deviceName: rec.deviceName,
        mode: rec.mode,
        uidRange: rec.uidRange,
        responseTimeoutMs: parseInt(rec.responseTimeoutMs),
        baudRate: parseInt(rec.baudRate),
        stopAndParityBits: rec.stopAndParityBits,
        broadcastIsEnabled: rec.broadcastIsEnabled === "true",
        isEnabled: rec.isEnabled === "true",
        gatewayGeneratedExceptions: {
            pathUnavalableCode: parseInt(rec["gatewayGeneratedExceptions:pathUnavalableCode"]),
            targetDeviceFailedToRespondCode: parseInt(rec["gatewayGeneratedExceptions:targetDeviceFailedToRespondCode"]),
        },
        portOpenRetryPeriod: parseInt(rec.portOpenRetryPeriod),
    };
}
exports.CREATE_ITEM_SCHEMA = opcb_ts_shared_1.RS485_ITEM_SCHEMA;
function fromCreateItem(item) {
    return {
        deviceName: item.deviceName,
        mode: item.mode,
        uidRange: item.uidRange,
        responseTimeoutMs: item.responseTimeoutMs.toString(),
        baudRate: item.baudRate.toString(),
        stopAndParityBits: item.stopAndParityBits,
        broadcastIsEnabled: item.broadcastIsEnabled.toString(),
        isEnabled: item.isEnabled.toString(),
        "gatewayGeneratedExceptions:pathUnavalableCode": item.gatewayGeneratedExceptions.pathUnavalableCode.toString(),
        "gatewayGeneratedExceptions:targetDeviceFailedToRespondCode": item.gatewayGeneratedExceptions.targetDeviceFailedToRespondCode.toString(),
        portOpenRetryPeriod: item.portOpenRetryPeriod.toString(),
    };
}
exports.UPDATE_ITEM_SCHEMA = opcb_ts_shared_1.RS485_ITEM_SCHEMA;
function fromUpdateItem(item) {
    return fromCreateItem(item);
}
_a = (0, conf_crud_1.simpleKeyed)("deviceName", (0, conf_crud_1.createConfCrud)("modbusRs485", ["deviceName"], toListItem, fromCreateItem, fromUpdateItem)), exports.list = _a.list, exports.create = _a.create, exports.update = _a.update, exports.remove = _a.remove;
//# sourceMappingURL=rs485.js.map