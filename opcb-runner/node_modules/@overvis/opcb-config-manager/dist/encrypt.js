"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encryptPasswordsInConfigFile = void 0;
const opcb_ts_shared_1 = require("@overvis/opcb-ts-shared");
const _1 = require(".");
const write_1 = require("./write");
async function encryptPasswordsInConfigFile(config, configFile) {
    let changed = false;
    const changes = {};
    for (const [i, user] of config.auth.users.entries()) {
        if (user.password) {
            user.encryptedPassword = (0, opcb_ts_shared_1.encryptPassword)(user.password);
            user.password = null;
            changes[`auth:users:${i}:password`] = null;
            changes[`auth:users:${i}:encryptedPassword`] = user.encryptedPassword;
            changed = true;
        }
    }
    const wifiSettings = [
        { name: "apSettings", entry: config.wlan.apSettings },
        { name: "stationSettings", entry: config.wlan.stationSettings },
    ];
    for (const s of wifiSettings) {
        if (s.entry.password && !(0, opcb_ts_shared_1.checkWifiPasswordIsEncrypted)(s.entry.password)) {
            s.entry.password = (0, opcb_ts_shared_1.encryptWifiPassword)(s.entry.password);
            changes[`wlan:${s.name}:password`] = s.entry.password;
            changed = true;
        }
    }
    if (changed && configFile) {
        _1.logger.info("Some passwords were encrypted. Rewriting config file...");
        await (0, write_1.saveConfigToFile)(config, configFile);
    }
    return changes;
}
exports.encryptPasswordsInConfigFile = encryptPasswordsInConfigFile;
//# sourceMappingURL=encrypt.js.map