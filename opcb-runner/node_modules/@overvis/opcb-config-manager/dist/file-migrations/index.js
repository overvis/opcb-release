"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyFileMigrations = void 0;
const tslib_1 = require("tslib");
const __1 = require("..");
const m000 = tslib_1.__importStar(require("./000-label-to-user"));
const MIGRATIONS = [m000];
async function applyFileMigrations(config) {
    if (!config.global || typeof config.global !== "object" || Array.isArray(config.global)) {
        config.global = {};
    }
    const global = config.global;
    // If we can't find the "global.lastRunVersion" field in the config, we assume this is a new config on a new device and no migrations have to be run. In this case, we modify the "global.lastAppliedFileMigration" field to the latest migration number and return.
    if (!("lastRunVersion" in global)) {
        global.lastAppliedFileMigration = MIGRATIONS.length - 1;
        return true;
    }
    const lastRaw = "lastAppliedFileMigration" in global ? global.lastAppliedFileMigration : undefined;
    const last = typeof lastRaw === "number" ? lastRaw : undefined;
    if (config.global.lastAppliedFileMigration ===
        MIGRATIONS.length - 1) {
        return false;
    }
    for (let i = last !== undefined ? last + 1 : 0; i < MIGRATIONS.length; i++) {
        __1.logger.warn(`Running migration ${MIGRATIONS[i].name}...`);
        await MIGRATIONS[i].up(config);
    }
    config.global.lastAppliedFileMigration = MIGRATIONS.length - 1;
    return true;
}
exports.applyFileMigrations = applyFileMigrations;
//# sourceMappingURL=index.js.map