"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const opcb_ts_shared_1 = require("@overvis/opcb-ts-shared");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
const utils_1 = require("./utils");
describe("config manager", function () {
    it("should correctly reset config to default", async () => {
        const [bus, stop, config] = await (0, utils_1.runConfman)({}, true, `{"global":{"userProvidedDeviceName":"Factory OPCB"}}`);
        expect((await bus.getConfs(["global:userProvidedDeviceName"]))["global:userProvidedDeviceName"]).toBe("My OPCB");
        expect(lodash_1.default.get(JSON.parse(config.contents), "global.userProvidedDeviceName")).toEqual("My OPCB");
        await bus.sendRequest(new opcb_ts_shared_1.redisCmd.ResetConfig());
        expect((await bus.getConfs(["global:userProvidedDeviceName"]))["global:userProvidedDeviceName"]).toBe("Factory OPCB");
        expect(lodash_1.default.get(JSON.parse(config.contents), "global.userProvidedDeviceName")).toEqual("Factory OPCB");
        stop();
    });
});
//# sourceMappingURL=reset-func.test.js.map