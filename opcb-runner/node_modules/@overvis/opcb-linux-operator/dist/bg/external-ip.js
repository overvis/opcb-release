"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateExternalIp = void 0;
const tslib_1 = require("tslib");
const https_1 = tslib_1.__importDefault(require("https"));
const __1 = require("..");
async function updateExternalIp(state) {
    const res = {};
    if (state.internetIsReachable === false) {
        return {};
    }
    return new Promise((resolve) => {
        let timedout = false;
        const req = https_1.default
            .get("https://api.ipify.org", { timeout: 500 }, (response) => {
            let data = "";
            response.on("data", (chunk) => {
                data += chunk;
            });
            response.on("end", () => {
                res["inet:externalIp"] = data;
                resolve(res);
            });
        })
            .on("timeout", () => {
            __1.logger.warn("Error while getting external IP: timeout.");
            timedout = true;
            req.destroy();
            resolve({});
        })
            .on("error", (error) => {
            if (timedout) {
                return;
            }
            __1.logger.warn("Error while getting external IP: " + error.message);
            resolve({});
        });
    });
}
exports.updateExternalIp = updateExternalIp;
//# sourceMappingURL=external-ip.js.map