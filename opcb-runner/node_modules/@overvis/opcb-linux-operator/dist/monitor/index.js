"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureMonitoring = void 0;
const cmdfiles_1 = require("./cmdfiles");
const disk_1 = require("./disk");
const external_ip_1 = require("./external-ip");
const gateway_1 = require("./gateway");
const inet_1 = require("./inet");
const lan_1 = require("./lan");
const sys_1 = require("./sys");
const temp_1 = require("./temp");
const tz_1 = require("./tz");
const update_1 = require("./update");
const upgrade_1 = require("./upgrade");
const voltage_1 = require("./voltage");
const wireguard_1 = require("./wireguard");
function ensureMonitoring(monitor, monitorConfig, elanIface, wlanIface, vpnMotherlandServerIp, trackWireguard, manageNetworking, manageTime, updateMode, updateTimeRange, allowForcedUpdates) {
    monitor.setState({
        settings: {
            manageNetworking,
            elanIface,
            wlanIface,
            vpnMotherlandServerIp,
            internetAccessPingIp: monitorConfig.internetAccessPingIp,
            updateMode,
            updateTimeRange,
            allowForcedUpdates,
        },
    });
    monitor.addRunner("inet-ping", inet_1.runInetPing, 1000, 60000);
    monitor.addRunner("elan-wlan-status", lan_1.updateElanWlanStatus, 2000, 60000);
    monitor.addRunner("gateway-ping", gateway_1.runGatewayPing, 1000, 60000);
    monitor.addRunner("sys-stats", sys_1.updateSysStats, 1000, 60000);
    if (manageTime) {
        monitor.addRunner("tz-list", tz_1.updateTimezonesList, 600000, 600000);
    }
    else {
        monitor.removeRunner("tz-list");
    }
    if (trackWireguard) {
        monitor.addRunner("wg-info", wireguard_1.updateWgInfo, 1000, 60000);
    }
    else {
        monitor.removeRunner("wg-info");
    }
    if (monitorConfig.enableCommandFiles) {
        monitor.addRunner("command-files", cmdfiles_1.checkCommandFiles, 1000, 3000);
    }
    else {
        monitor.removeRunner("command-files");
    }
    if (monitorConfig.monitorDiskSpace) {
        monitor.addRunner("disk-space", disk_1.updateDiskSpaceUsage, 1000, 60000);
    }
    else {
        monitor.removeRunner("disk-space");
    }
    if (monitorConfig.monitorTemperature) {
        monitor.addRunner("temperature", temp_1.updateTemperature, 1000, 60000);
    }
    else {
        monitor.removeRunner("temperature");
    }
    if (monitorConfig.monitorVoltage) {
        monitor.addRunner("voltage", voltage_1.updateVoltage, 1000, 60000);
    }
    else {
        monitor.removeRunner("voltage");
    }
    if (monitorConfig.checkForExternalIp) {
        monitor.addRunner("external-ip", external_ip_1.updateExternalIp, 60000, 600000);
    }
    else {
        monitor.removeRunner("external-ip");
    }
    monitor.addRunner("check-updates", update_1.checkForUpdates, 8 * 60 * 60 * 1000, 8 * 60 * 60 * 1000);
    monitor.addRunner("check-upgrades", upgrade_1.checkForUpgrades, 10 * 60 * 1000, 10 * 60 * 1000);
}
exports.ensureMonitoring = ensureMonitoring;
//# sourceMappingURL=index.js.map