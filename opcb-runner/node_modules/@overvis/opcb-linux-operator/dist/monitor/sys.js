"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateSysStats = void 0;
const tslib_1 = require("tslib");
const os = tslib_1.__importStar(require("os"));
// eslint-disable-next-line @typescript-eslint/require-await
async function updateSysStats() {
    const res = {
        "time:os": os.uptime(),
        "time:process": process.uptime(),
        "time:now": Date.now() - new Date().getTimezoneOffset() * 60 * 1000,
        "time:nowUtc": Date.now(),
        "ram:total": os.totalmem(),
        "ram:used": os.totalmem() - os.freemem(),
        "sys:arch": os.arch(),
        "sys:platform": os.platform(),
        "sys:osRelease": os.release() + " Version: " + os.version() + " Machine: " + os.machine(),
    };
    // for (const [i, cpu] of os.cpus().entries()) {
    //     res[`sys:cpus:${i.toString()}:model`] = cpu.model;
    //     res[`sys:cpus:${i.toString()}:speed`] = cpu.speed;
    //     res[`sys:cpus:${i.toString()}:times:user`] = cpu.times.user;
    //     res[`sys:cpus:${i.toString()}:times:nice`] = cpu.times.nice;
    //     res[`sys:cpus:${i.toString()}:times:sys`] = cpu.times.sys;
    //     res[`sys:cpus:${i.toString()}:times:idle`] = cpu.times.idle;
    //     res[`sys:cpus:${i.toString()}:times:irq`] = cpu.times.irq;
    // }
    res["sys:loadAvg"] = os.loadavg().join(" ");
    for (const [i, cpu] of getCpuUsage().entries()) {
        res[`sys:cpus:${i}`] = cpu;
    }
    return res;
}
exports.updateSysStats = updateSysStats;
let timesBefore = os.cpus().map((c) => c.times);
function getCpuUsage() {
    const timesAfter = os.cpus().map((c) => c.times);
    const timeDeltas = timesAfter.map((t, i) => ({
        busy: t.user - timesBefore[i].user + t.sys - timesBefore[i].sys + t.irq - timesBefore[i].irq,
        idle: t.idle - timesBefore[i].idle + t.nice - timesBefore[i].nice,
    }));
    timesBefore = timesAfter;
    return timeDeltas.map((times) => times.busy / (times.busy + times.idle));
}
//# sourceMappingURL=sys.js.map