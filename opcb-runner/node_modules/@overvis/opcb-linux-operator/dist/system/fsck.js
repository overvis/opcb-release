"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureCheckDiskFileSystem = void 0;
const __1 = require("..");
const exec_1 = require("../exec");
// TODO_FUTURE: Different OS have different activation methods.
async function ensureCheckDiskFileSystem() {
    // For activation check disk fie system on Armbian platform  need add arguments
    // to the file `/boot/armbianEnv.txt`
    const filePath = "/boot/armbianEnv.txt";
    __1.logger.debug("Ensuring automatic check disk file system is set up...");
    // await ensureFileContainsString(filePath, `${ensureKey}=${ensureValue}`);
    const content = await (0, exec_1.getFileContents)(filePath);
    if (content === undefined) {
        __1.logger.warn("File 'armbianEnv.txt' does not exist. This OS does not support 'extraargs'.");
        return;
    }
    const ensureValue = "fsck.fix=yes fsck.repair=yes";
    let isEnsured = false;
    let newContent = "";
    const paramList = content.split("\n");
    for (let keyValue of paramList) {
        if (!isEnsured && keyValue.startsWith("extraargs=")) {
            // get value and trim
            let value = keyValue.slice(keyValue.indexOf("=") + 1).trim();
            if (value.startsWith('"') && value.endsWith('"')) {
                // remove double quotes
                value = value.substring(1, value.length - 1);
            }
            if (!value.includes(ensureValue)) {
                keyValue = "extraargs=";
                keyValue += value.length ? `${value} ${ensureValue}` : ensureValue;
            }
            isEnsured = true;
        }
        if (keyValue.length) {
            newContent += `${keyValue}\n`;
        }
    }
    if (!isEnsured) {
        newContent += `extraargs=${ensureValue}\n`;
    }
    await (0, exec_1.ensureFileContents)(filePath, newContent);
}
exports.ensureCheckDiskFileSystem = ensureCheckDiskFileSystem;
//# sourceMappingURL=fsck.js.map