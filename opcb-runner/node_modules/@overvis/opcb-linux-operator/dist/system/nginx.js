"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureNginxIsConfigured = void 0;
const __1 = require("..");
const exec_1 = require("../exec");
async function ensureNginxIsConfigured(config, staticFilesDir) {
    __1.logger.debug("Ensuring nginx is configured...");
    const nginxConfigFileContents = `
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen ${config.externalHost}:${config.externalPort} default_server;

    root ${staticFilesDir}/ui/;

    index index.html;

    server_name _;

    location / {
        try_files $uri $uri.html $uri/ =404;
    }

    location /CHANGELOG.md {
        alias ${staticFilesDir}/CHANGELOG.md;
    }

    location /docs/ {
        alias ${staticFilesDir}/docs/;
    }

    location /api/ {
        proxy_pass http://localhost:${config.internalApiPort}/;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_connect_timeout 75s;
        proxy_read_timeout 300s;
        add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';
        add_header Access-Control-Allow-Origin *;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}
`;
    const changed = await (0, exec_1.ensureFileContents)("/etc/nginx/sites-enabled/default", nginxConfigFileContents);
    await (0, exec_1.ensureServiceState)("nginx", true, changed ? "configuration changed" : undefined);
}
exports.ensureNginxIsConfigured = ensureNginxIsConfigured;
//# sourceMappingURL=nginx.js.map