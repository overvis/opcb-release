"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureTimeIsConfigured = void 0;
const __1 = require("..");
const exec_1 = require("../exec");
async function ensureTimeIsConfigured(config) {
    __1.logger.debug("Ensuring time settings are configured...");
    const output = await (0, exec_1.exec)("timedatectl", ["show"]);
    const status = Object.fromEntries(output
        .split("\n")
        .filter((line) => line !== "")
        .map((line) => line
        .trim()
        .split("=")
        .map((v) => v.trim())));
    const ntpEnabled = status.NTP === "yes" && status.CanNTP !== "no";
    const timezone = status.Timezone;
    if (config.useNtp !== ntpEnabled) {
        __1.logger.info(`Setting NTP to ${config.useNtp ? "enabled" : "disabled"}...`);
        await (0, exec_1.exec)("timedatectl", ["set-ntp", config.useNtp ? "true" : "false"]);
    }
    if (config.timezone !== timezone) {
        __1.logger.info(`Setting timezone to ${config.timezone}...`);
        try {
            await (0, exec_1.exec)("timedatectl", ["set-timezone", config.timezone]);
            process.env.TZ = config.timezone;
        }
        catch (e) {
            __1.logger.error(`Failed to set timezone to ${config.timezone}: ${e.message}`);
        }
    }
}
exports.ensureTimeIsConfigured = ensureTimeIsConfigured;
//# sourceMappingURL=time.js.map