"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.start = void 0;
const tslib_1 = require("tslib");
const opcb_ts_shared_1 = require("@overvis/opcb-ts-shared");
const pino_1 = tslib_1.__importDefault(require("pino"));
const opcbTasks = tslib_1.__importStar(require("."));
let logger;
async function start() {
    logger = (0, pino_1.default)({
        level: "debug",
        transport: {
            target: "pino-pretty",
        },
    });
    logger.info("Starting task manager in test mode...");
    const redisClient = new opcb_ts_shared_1.RedisClient("redis://127.0.0.1:6379/0", logger.child({ module: "RDC" }));
    await opcbTasks.run({
        logger,
        redisClient: redisClient.getActorClient("TSK"),
        sqliteDbPath: "../localdev/opcb/user/opcb.sqlite3",
        memSqliteDbPath: "../localdev/opcb/user/opcb-mem.sqlite3",
        sqliteLibDir: "../opcb-ts-shared/sqlite",
        redisUrl: "redis://127.0.0.1:6379/0",
    });
    return Promise.race([redisClient.listenCmdStreamForever()]);
}
exports.start = start;
start().catch((e) => {
    if (logger) {
        logger.fatal(e);
    }
    else {
        // eslint-disable-next-line no-console
        console.error(e);
    }
    setTimeout(() => process.exit(1), 1000);
});
//# sourceMappingURL=start.js.map