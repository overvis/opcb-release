drop table devices;
create table devices (
    id uuid default (uuid()) primary key,
    created_on integer default (cast(strftime('%s', current_timestamp) as integer)) not null,
    title text not null,
    orig_template_id text not null,
    -- the actual template data is in runner config folder (having subfolder with uuid name)
    channel text not null -- LGW:<did>
);

create table lorasens_devices (
    device_id uuid primary key references devices,
    sku text not null, -- 'lwg-1', 'lth-1'
    device_kind_code integer not null, -- only for debugging
    firmware_version integer not null, -- only for debugging
    frequency_device_khz integer not null, -- 864000 / 864025 / 864050 ... 869200
    frequency_gateway_khz integer not null, -- 864000 / 864025 / 864050 ... 869200
    bandwidth_khz text not null, -- 7.6 /10.4 /15.6 /20.8 /31.25 /41.7 /62.5 /125 /250 /500
    spreading_factor integer not null, -- 6 <= spreading_factor <= 12
    coding_rate_bits integer not null, -- 5 <= coding_rate_bits <= 8

    did integer not null unique,
    password integer not null, -- 0 <= password <= 0xffffffff
    update_period_sec integer not null,
    active_mode_till integer not null
);

create table lorasens_registers_requests (
    did integer not null,
    register_address integer not null,
    -- error has priority over value
    -- error is cleared on successful value update
    last_cmd_error integer,
    -- once a successful GET or SET have passed, these two are not cleared
    last_updated_on integer,
    last_value integer,
    -- value to be set; on successful SET command, it is copied to last_value then cleared here
    set_request_value integer,
    -- last get request timestamp, GET is requested if last_get_request_on >= last_updated_on
    last_get_request_on integer not null,
    -- cmd_id - key to a command started for a set_request value or last_get_request_on
    -- cmd_id is cleared when command results
    cmd_id integer,

    primary key (did, register_address)
);

drop table lora_commands;
create table lorasens_commands (
    id integer primary key autoincrement,
    did integer not null,
    created_on integer default (cast(strftime('%s', current_timestamp) as integer)) not null,
    command text not null,
    rdb_reqid text,
    sent_on integer,
    sent_tid integer,
    execute_error integer,
    resulted_on integer,
    -- result_error has priority over result_value (only one of the two is set)
    result_error integer,
    result_value text
);
