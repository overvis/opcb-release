"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkWifiPasswordIsEncrypted = exports.decryptWifiPassword = exports.encryptWifiPassword = exports.checkIfPasswordIsCorrect = exports.encryptPassword = void 0;
var tslib_1 = require("tslib");
var crypto = tslib_1.__importStar(require("crypto"));
function encryptPassword(password) {
    var algo = "sha256";
    var salt = crypto.randomBytes(8).toString("base64");
    var hash = crypto
        .createHash(algo)
        .update(password + salt)
        .digest("base64");
    return "".concat(algo, "$").concat(salt, "$").concat(hash);
}
exports.encryptPassword = encryptPassword;
function checkIfPasswordIsCorrect(providedPassword, hashedPassword) {
    var _a = hashedPassword.split("$"), algo = _a[0], salt = _a[1], hash = _a[2];
    var providedHash = crypto
        .createHash(algo)
        .update(providedPassword + salt)
        .digest("base64");
    return providedHash === hash;
}
exports.checkIfPasswordIsCorrect = checkIfPasswordIsCorrect;
function encryptWifiPassword(password) {
    var algo = "base64";
    var encPass = Buffer.from(password).toString("base64");
    return "".concat(algo, "$").concat(encPass);
}
exports.encryptWifiPassword = encryptWifiPassword;
function decryptWifiPassword(encryptedPassword) {
    var _a = encryptedPassword.split("$"), algo = _a[0], encPass = _a[1];
    return algo === "base64"
        ? Buffer.from(encPass, "base64").toString("binary")
        : encryptedPassword;
}
exports.decryptWifiPassword = decryptWifiPassword;
function checkWifiPasswordIsEncrypted(password) {
    var _a = password.split("$"), algo = _a[0], _encPass = _a[1];
    return algo === "base64";
}
exports.checkWifiPasswordIsEncrypted = checkWifiPasswordIsEncrypted;
//# sourceMappingURL=auth.js.map