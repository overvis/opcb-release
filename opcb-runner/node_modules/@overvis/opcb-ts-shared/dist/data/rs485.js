"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RS485_ITEM_SCHEMA = exports.STOP_PARITY_SCHEMA = exports.MODBUS_MODE_SCHEMA = void 0;
var typebox_1 = require("@sinclair/typebox");
exports.MODBUS_MODE_SCHEMA = typebox_1.Type.Union([
    typebox_1.Type.Literal("rtu-master"),
    typebox_1.Type.Literal("ascii-master"),
    typebox_1.Type.Literal("rtu-slave"),
    typebox_1.Type.Literal("ascii-slave"),
]);
exports.STOP_PARITY_SCHEMA = typebox_1.Type.Union([
    typebox_1.Type.Literal("1N"),
    typebox_1.Type.Literal("1E"),
    typebox_1.Type.Literal("1O"),
    typebox_1.Type.Literal("2N"),
]);
exports.RS485_ITEM_SCHEMA = typebox_1.Type.Object({
    deviceName: typebox_1.Type.String(),
    mode: exports.MODBUS_MODE_SCHEMA,
    uidRange: typebox_1.Type.String(),
    responseTimeoutMs: typebox_1.Type.Number(),
    baudRate: typebox_1.Type.Number(),
    stopAndParityBits: exports.STOP_PARITY_SCHEMA,
    broadcastIsEnabled: typebox_1.Type.Boolean(),
    isEnabled: typebox_1.Type.Boolean(),
    gatewayGeneratedExceptions: typebox_1.Type.Object({
        pathUnavalableCode: typebox_1.Type.Number(),
        targetDeviceFailedToRespondCode: typebox_1.Type.Number(),
    }),
    portOpenRetryPeriod: typebox_1.Type.Number(),
});
//# sourceMappingURL=rs485.js.map