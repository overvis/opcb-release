"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromiseMonitor = exports.timeout = exports.TimeoutError = void 0;
var tslib_1 = require("tslib");
var TimeoutError = /** @class */ (function (_super) {
    tslib_1.__extends(TimeoutError, _super);
    function TimeoutError() {
        return _super.call(this, "timeout") || this;
    }
    return TimeoutError;
}(Error));
exports.TimeoutError = TimeoutError;
function timeout(ms, promise) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    var timedOut = false;
                    var timer = setTimeout(function () {
                        reject(new TimeoutError());
                        timedOut = true;
                    }, ms);
                    promise
                        .then(function (res) {
                        if (timedOut) {
                            return res;
                        }
                        clearTimeout(timer);
                        resolve(res);
                        return res;
                    })
                        .catch(function (err) {
                        if (timedOut) {
                            return;
                        }
                        clearTimeout(timer);
                        reject(err);
                    });
                })];
        });
    });
}
exports.timeout = timeout;
var PromiseMonitor = /** @class */ (function () {
    function PromiseMonitor(prm) {
        var _this = this;
        this._status = "pending";
        this._isPending = true;
        this._isResolved = false;
        this._isRejected = false;
        // eslint-disable-next-line promise/catch-or-return
        prm.then(function (result) {
            _this._status = "resolved";
            _this._isResolved = true;
            _this._isPending = false;
            _this._result = result;
            return result;
        }, function (err) {
            _this._status = "rejected";
            _this._isPending = false;
            _this._isRejected = true;
            _this._error = err instanceof Error ? err : new Error("unknown error");
            // eslint-disable-next-line @typescript-eslint/no-unsafe-return
            return err;
        });
    }
    Object.defineProperty(PromiseMonitor.prototype, "status", {
        get: function () {
            return this._status;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PromiseMonitor.prototype, "isPending", {
        get: function () {
            return this._isPending;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PromiseMonitor.prototype, "isResolved", {
        get: function () {
            return this._isResolved;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PromiseMonitor.prototype, "isRejected", {
        get: function () {
            return this._isRejected;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PromiseMonitor.prototype, "error", {
        get: function () {
            return this._error;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PromiseMonitor.prototype, "result", {
        get: function () {
            return this._result;
        },
        enumerable: false,
        configurable: true
    });
    return PromiseMonitor;
}());
exports.PromiseMonitor = PromiseMonitor;
//# sourceMappingURL=promises.js.map