"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logStream = void 0;
var tslib_1 = require("tslib");
function logStream(redis, name, msgCallback, state) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var oldMsgs, lastId, _i, oldMsgs_1, msg, msgs, _a, _b, msg;
        return tslib_1.__generator(this, function (_c) {
            switch (_c.label) {
                case 0: return [4 /*yield*/, redis.xrevrangeBuffer(name, "+", "-", "COUNT", 20)];
                case 1:
                    oldMsgs = _c.sent();
                    oldMsgs.reverse();
                    lastId = "$";
                    for (_i = 0, oldMsgs_1 = oldMsgs; _i < oldMsgs_1.length; _i++) {
                        msg = oldMsgs_1[_i];
                        msgCallback(msg[0], msg[1]);
                        lastId = msg[0].toString();
                    }
                    _c.label = 2;
                case 2:
                    if (!!state.interrupt) return [3 /*break*/, 4];
                    return [4 /*yield*/, redis.xreadBuffer("COUNT", 100, "BLOCK", 1000, "STREAMS", name, lastId)];
                case 3:
                    msgs = _c.sent();
                    if (msgs !== null) {
                        for (_a = 0, _b = msgs[0][1]; _a < _b.length; _a++) {
                            msg = _b[_a];
                            msgCallback(msg[0], msg[1]);
                            lastId = msg[0].toString();
                        }
                    }
                    return [3 /*break*/, 2];
                case 4:
                    redis.disconnect();
                    return [2 /*return*/];
            }
        });
    });
}
exports.logStream = logStream;
//# sourceMappingURL=log.js.map