"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HTTP_SCHEMA = void 0;
var typebox_1 = require("@sinclair/typebox");
var modbus_mappers_1 = require("../modbus-mappers");
exports.HTTP_SCHEMA = typebox_1.Type.Object({
    manageNginx: typebox_1.Type.Boolean({
        default: true,
        description: "If enabled, OPCB will install and manage NGinx server configuration for API proxying. If disabled, user will have to configure NGinx to translate the API port and the UI.",
    }),
    externalHost: typebox_1.Type.String({
        maxLength: 30,
        description: "Host to listen for HTTP requests. Use '*' to listen on all interfaces (default).",
        default: "*",
    }),
    externalPort: typebox_1.Type.Integer({
        name: "HTTP port",
        mapper: new modbus_mappers_1.MAPPERS.U16(1001),
        minimum: 1,
        maximum: 65535,
        description: "Port to listen for HTTP requests. Note that SSL is not supported, even if the port is set to 443.",
        default: 80,
        group: "HTTP configuration",
    }),
    internalApiPort: typebox_1.Type.Integer({
        name: "API port",
        mapper: new modbus_mappers_1.MAPPERS.U16(1002),
        minimum: 1,
        maximum: 65535,
        description: "This port is proxied by Nginx web-server to the external HTTP port (80 by default) with an /api/ prefix.",
        default: 3000,
        group: "HTTP configuration",
    }),
    internalApiListenTo: typebox_1.Type.String({
        name: "Ip address to listen for API requests",
        mapper: new modbus_mappers_1.MAPPERS.IPv4(1060),
        format: "ipv4",
        description: "IP address to listen for API requests. Use '0.0.0.0' to listen on all interfaces, or 127.0.0.1 to listen to only local requests (default).",
        default: "127.0.0.1",
        group: "HTTP configuration",
    }),
    enableApiRequestsLogging: typebox_1.Type.Boolean({
        description: "Output request/response logging (level - info).",
        default: false,
    }),
}, {
    additionalProperties: false,
    description: "OPCB HTTP configuration.",
    default: {},
});
//# sourceMappingURL=http.schema.js.map