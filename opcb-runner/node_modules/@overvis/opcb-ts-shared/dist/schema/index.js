"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CONFIG_SCHEMA = void 0;
var typebox_1 = require("@sinclair/typebox");
var auth_schema_1 = require("./auth.schema");
var elan_schema_1 = require("./elan.schema");
var global_schema_1 = require("./global.schema");
var http_schema_1 = require("./http.schema");
var modbus_rs_485_schema_1 = require("./modbus-rs-485.schema");
var modbus_tcp_clients_schema_1 = require("./modbus-tcp-clients.schema");
var modbus_tcp_server_schema_1 = require("./modbus-tcp-server.schema");
var modbus_tcp_schema_1 = require("./modbus-tcp.schema");
var monitoring_schema_1 = require("./monitoring.schema");
var overvis_reverse_connection_schema_1 = require("./overvis-reverse-connection.schema");
var overvis_vpn_schema_1 = require("./overvis-vpn.schema");
var virtual_device_schema_1 = require("./virtual-device.schema");
var wlan_schema_1 = require("./wlan.schema");
var format_1 = require("@sinclair/typebox/format");
format_1.Format.Set("ipv4", function (value) {
    return /^(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)$/.test(value);
});
format_1.Format.Set("hostname", function (value) {
    return /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/.test(value);
});
format_1.Format.Set("time", function (value) { return /^\d\d:\d\d$/.test(value); });
exports.CONFIG_SCHEMA = typebox_1.Type.Object({
    global: global_schema_1.GLOBAL_SCHEMA,
    elan: elan_schema_1.ELAN_SCHEMA,
    wlan: wlan_schema_1.WLAN_SCHEMA,
    virtualDevice: virtual_device_schema_1.VIRTUAL_DEVICE_SCHEMA,
    modbusTcp: modbus_tcp_schema_1.MODBUS_TCP_SCHEMA,
    modbusTcpServer: modbus_tcp_server_schema_1.MODBUS_TCP_SERVER_SCHEMA,
    modbusTcpClients: modbus_tcp_clients_schema_1.MODBUS_TCP_CLIENTS_SCHEMA,
    modbusRs485: modbus_rs_485_schema_1.MODBUS_RS485_SCHEMA,
    overvisVpn: overvis_vpn_schema_1.OVERVIS_VPN_SCHEMA,
    overvisReverseConnection: overvis_reverse_connection_schema_1.OVERVIS_REVERSE_CONNECTION_SCHEMA,
    http: http_schema_1.HTTP_SCHEMA,
    monitoring: monitoring_schema_1.MONITORING_SCHEMA,
    auth: auth_schema_1.AUTH_SCHEMA,
    $schema: typebox_1.Type.String({
        default: "../opcb-runner/node_modules/@overvis/opcb-ts-shared/config.schema.json",
    }),
}, {
    additionalProperties: false,
});
//# sourceMappingURL=index.js.map