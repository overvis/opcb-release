"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MODBUS_TCP_SCHEMA = void 0;
var typebox_1 = require("@sinclair/typebox");
exports.MODBUS_TCP_SCHEMA = typebox_1.Type.Object({
    maxPayloadLength: typebox_1.Type.Integer({
        minimum: 12,
        maximum: 1000,
        description: "Modbus TCP maximum payload length in bytes.",
        default: 256,
    }),
    requestBufferSize: typebox_1.Type.Integer({
        minimum: 1024,
        maximum: 32768,
        description: "Modbus TCP RX (requests) buffer size in bytes.",
        default: 2048,
    }),
    responseBufferSize: typebox_1.Type.Integer({
        minimum: 1024,
        maximum: 32768,
        description: "Modbus TCP TX (responses) buffer size in bytes.",
        default: 2048,
    }),
    threadPollPeriodMicrosec: typebox_1.Type.Integer({
        minimum: 1,
        maximum: 65535,
        description: "Sleep time when TCP socket is idle, microseconds.",
        default: 20000,
    }),
}, {
    description: "Common Modbus TCP configuration.",
    additionalProperties: false,
    default: {},
});
//# sourceMappingURL=modbus-tcp.schema.js.map