"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("@jest/globals");
const _1 = require(".");
(0, globals_1.describe)("u16 mappers", () => {
    (0, globals_1.test)("u16 -> u16", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16.u16(0x42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.u16.u16(0xffff)).toBe(0xffff);
        (0, globals_1.expect)(_1.MAPPERS.u16.u16(1234567.89)).toBe(54919);
    });
    (0, globals_1.test)("u16 -> bool", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16.bool(0x00)).toBe(false);
        (0, globals_1.expect)(_1.MAPPERS.u16.bool(0x01)).toBe(true);
        (0, globals_1.expect)(_1.MAPPERS.u16.bool(0x33)).toBe(true);
    });
    (0, globals_1.test)("u16 -> u8", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16.u8(0x42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.u16.u8(0xff42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.u16.u8(0xff00)).toBe(0x00);
        (0, globals_1.expect)(_1.MAPPERS.u16.u8(1234567.89)).toBe(135);
    });
    (0, globals_1.test)("u16 -> i8", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0x42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0xff42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0xff00)).toBe(0x00);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0xff)).toBe(-0x1);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0xf0)).toBe(-0x10);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0xfff0)).toBe(-0x10);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0x7f)).toBe(0x7f);
        (0, globals_1.expect)(_1.MAPPERS.u16.i8(0x80)).toBe(-0x80);
    });
    (0, globals_1.test)("u16 -> i16", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16.i16(0x42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.u16.i16(0x7fff)).toBe(0x7fff);
        (0, globals_1.expect)(_1.MAPPERS.u16.i16(0xffff)).toBe(-0x1);
        (0, globals_1.expect)(_1.MAPPERS.u16.i16(0x8000)).toBe(-0x8000);
    });
});
(0, globals_1.describe)("u16s mappers", () => {
    (0, globals_1.test)("u16 -> i32", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.i32([0x1234, 0x5678])).toBe(0x12345678);
        (0, globals_1.expect)(_1.MAPPERS.u16s.i32([0xffff, 0xffff])).toBe(-0x1);
        (0, globals_1.expect)(_1.MAPPERS.u16s.i32([0x8000, 0x0000])).toBe(-0x80000000);
    });
    (0, globals_1.test)("u16 -> u32", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.u32([0x1234, 0x5678])).toBe(0x12345678);
        (0, globals_1.expect)(_1.MAPPERS.u16s.u32([0xffff, 0xffff])).toBe(0xffffffff);
        (0, globals_1.expect)(_1.MAPPERS.u16s.u32([0x8000, 0x0000])).toBe(0x80000000);
    });
    (0, globals_1.test)("u16 -> f32", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.f32([0x4049, 0x0fdb])).toBe(3.1415927410125732);
        (0, globals_1.expect)(_1.MAPPERS.u16s.f32([0x3eaa, 0xaaab])).toBe(0.3333333432674408);
    });
    (0, globals_1.test)("u16 -> f64", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.f64([0x4009, 0x21fb, 0x5444, 0x2d18])).toBe(3.141592653589793);
        (0, globals_1.expect)(_1.MAPPERS.u16s.f64([0x3ff9, 0x9999, 0x9999, 0x999a])).toBe(1.6);
        (0, globals_1.expect)(_1.MAPPERS.u16s.f64([0x3fd5, 0x1234, 0x5678, 0x9abc])).toBe(0.32923611111111106);
    });
    (0, globals_1.test)("u16 -> utf8 string", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.utf8str([
            0x0048, 0x0065, 0x006c, 0x006c, 0x006f, 0x0020, 0x0077, 0x006f, 0x0072, 0x006c,
            0x0064, 0x0021,
        ])).toBe("Hello world!");
        (0, globals_1.expect)(_1.MAPPERS.u16s.utf8str([])).toBe("");
    });
    (0, globals_1.test)("u16 -> ipv4", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.ipv4([192, 168, 0, 1])).toBe("192.168.0.1");
    });
    (0, globals_1.test)("u16 -> mac", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.mac([0xab, 0xcd, 0xef, 0x12, 0x34, 0x56])).toBe("ab:cd:ef:12:34:56");
    });
    (0, globals_1.test)("u16 -> hex words string", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.hexWordsStr([0x1234, 0x5678, 0x9abc])).toBe("1234 5678 9abc");
    });
    (0, globals_1.test)("u16 -> hex bytes string", () => {
        (0, globals_1.expect)(_1.MAPPERS.u16s.hexBytesStr([0x1234, 0x5678, 0x9abc])).toBe("34 78 bc");
    });
});
(0, globals_1.describe)("bool mappers", () => {
    (0, globals_1.test)("bool -> u16", () => {
        (0, globals_1.expect)(_1.MAPPERS.bool.u16(false)).toBe(0x0000);
        (0, globals_1.expect)(_1.MAPPERS.bool.u16(true)).toBe(0x0001);
    });
});
(0, globals_1.describe)("i16 mappers", () => {
    (0, globals_1.test)("i16 -> u16", () => {
        (0, globals_1.expect)(_1.MAPPERS.i16.u16(0x42)).toBe(0x42);
        (0, globals_1.expect)(_1.MAPPERS.i16.u16(-1)).toBe(0xffff);
        (0, globals_1.expect)(_1.MAPPERS.i16.u16(-10)).toBe(0xfff6);
        (0, globals_1.expect)(_1.MAPPERS.i16.u16(-1234567.89)).toBe(10617);
        (0, globals_1.expect)(_1.MAPPERS.i16.u16(1234567.89)).toBe(54919);
    });
});
(0, globals_1.describe)("u32 mappers", () => {
    (0, globals_1.test)("u32 -> u16s", () => {
        (0, globals_1.expect)(_1.MAPPERS.u32.u16s(0x12345678)).toEqual([0x1234, 0x5678]);
        (0, globals_1.expect)(_1.MAPPERS.u32.u16s(0x80000000)).toEqual([0x8000, 0x0000]);
        (0, globals_1.expect)(_1.MAPPERS.u32.u16s(0xffffffff)).toEqual([0xffff, 0xffff]);
    });
});
(0, globals_1.describe)("i32 mappers", () => {
    (0, globals_1.test)("i32 -> u16s", () => {
        (0, globals_1.expect)(_1.MAPPERS.i32.u16s(0x12345678)).toEqual([0x1234, 0x5678]);
        (0, globals_1.expect)(_1.MAPPERS.i32.u16s(0x80000000)).toEqual([0x8000, 0x0000]);
        (0, globals_1.expect)(_1.MAPPERS.i32.u16s(-1)).toEqual([0xffff, 0xffff]);
    });
});
(0, globals_1.describe)("f32 mappers", () => {
    (0, globals_1.test)("f32 -> u16s", () => {
        (0, globals_1.expect)(_1.MAPPERS.f32.u16s(3.1415927410125732)).toEqual([0x4049, 0x0fdb]);
        (0, globals_1.expect)(_1.MAPPERS.f32.u16s(0.3333333432674408)).toEqual([0x3eaa, 0xaaab]);
    });
});
//# sourceMappingURL=mappers.test.js.map